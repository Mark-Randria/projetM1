// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Utilisateur {
  id           Int           @id @default(autoincrement())
  nom          String
  prenom       String
  email        String        @unique
  auteur       Auteur?
  organisateur Organisateur?
  reviewer     Reviewer?
}

model Auteur {
  id            Int         @id @default(autoincrement())
  utilisateur   Utilisateur @relation(fields: [utilisateurId], references: [id])
  utilisateurId Int         @unique
  articles      Article[]
}

model Organisateur {
  id            Int         @id @default(autoincrement())
  utilisateur   Utilisateur @relation(fields: [utilisateurId], references: [id])
  utilisateurId Int         @unique
}

model Reviewer {
  id            Int         @id @default(autoincrement())
  utilisateur   Utilisateur @relation(fields: [utilisateurId], references: [id])
  utilisateurId Int         @unique
  critiques     Critique[]
}

model Critique {
  id              Int      @id @default(autoincrement())
  datePubCritique DateTime @default(now())
  reviewerId      Int
  reviewer        Reviewer @relation(fields: [reviewerId], references: [id])
  articleId       Int
  article         Article  @relation(fields: [articleId], references: [id])
}

model Article {
  id             Int        @id @default(autoincrement())
  titreArticle   String
  publie         Boolean    @default(false)
  archive        Boolean    @default(false)
  datePubArticle DateTime   @default(now())
  auteurId       Int
  auteur         Auteur     @relation(fields: [auteurId], references: [id])
  critiques      Critique[]
}
